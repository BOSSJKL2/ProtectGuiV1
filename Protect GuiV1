--[[KEY SYSTEM FOR THE MAIN SCRIPT BY DKAZERBR]]--

_G.Key = "BJGUI_4866PAID";

--[[SCRIPT SETTINGS BY ENHANCEDDEVELOPMENT (THE GUY WHO MADE THE LEVEL CHOOSER & HARDCORE DISABLER), GOAT (THE GUY WHO MADE 1 SHOT KILL), & ! (THE GUY WHO MADE NAMESPOOFER)]]--
--[[Juul]]--
_G.Level = 0; --The dungeon level you want to enter. Set to 0 to make it choose the optimal dungeon.
_G.NoHardcore = true; --Do you want to disable hardcore mode?
_G.InstaKill = false; --Mobs not Bosses (Buggy - Gets Stuck Sometimes)
_G.NameSpoofer = false; --Hide your name to safely take screenshots?
_G.Name = "NameHere" --Change your name for spoofer

local OriginalEvent = game:GetService("ReplicatedStorage"):WaitForChild("remotes"):WaitForChild("createLobby").InvokeServer;

local MetaMethods = getrawmetatable(game);
local IndexBackup = MetaMethods.__index;
local NamecallBackup = MetaMethods.__namecall;
setreadonly(MetaMethods, false);

MetaMethods.__index = newcclosure(function(Self, Key)
	if (checkcaller()) then
		if ((Key == "Value") and (Self:IsA("IntValue") and (Self.Name == "Level"))) then
			if (_G.Level > 0) then
				return _G.Level;
			end;
		elseif ((Key == "InvokeServer") and (Self.Name == "createLobby")) then
			return newcclosure(function(Self, ParameterOne, ParameterTwo, ParameterThree, ParameterFour, ...)
				if ((type(ParameterOne) ~= "Userdata") and (type(Self) == "userdata")) then
					return OriginalEvent(Self, ParameterOne, ParameterTwo, ((_G.NoHardcore and false) or ParameterThree), ParameterFour, ...);
				else
					return OriginalEvent(ParameterOne, ParameterTwo, ((_G.NoHardcore and false) or ParameterThree), ParameterFour, ...);
				end;
			end);
		end;
	end;
	return IndexBackup(Self, Key);
end);

MetaMethods.__namecall = newcclosure(function(Self, ...)
	local Arguments = {...};
	if (checkcaller()) then
		for Key, Parameter in next, Arguments do
			if (Parameter == "Level") then
				if (_G.Level > 0) then
					return _G.Level;
				end;
			elseif ((Parameter == "InvokeServer") and (Self.Name == "createLobby")) then
				if (_G.NoHardcore) then
					Arguments[Key - 2] = false;
				end;
			end;
		end;
	end;
	return NamecallBackup(Self, unpack(Arguments));
end);

setreadonly(MetaMethods, true);

if (_G.NameSpoofer) then
	local CoreGui = game:GetService("CoreGui");
	local LocalPlayer = game:GetService("Players").LocalPlayer;
	coroutine.wrap(function()
		while true do
			pcall(function()
				CoreGui.RobloxGui.TopBarContainer.NameHealthContainer.Username.Text = (_G.Name);
				LocalPlayer.PlayerGui.playerStatus.Frame.playerName.Text = (_G.Name);
				LocalPlayer.Character.playerNameplate.Frame.name.Text = (_G.Name);
			end);
			wait(1 / 30);
		end;
	end)();
end;

if (_G.InstaKill) then
	local PlayersService = game:GetService("Players");
	local Player = PlayersService.LocalPlayer;
	coroutine.wrap(function()
		while true do
			pcall(function()
				local mypos = Player.Character.HumanoidRootPart.CFrame.p;
				for index, value in next, workspace.dungeon:GetDescendants() do
					if (value:FindFirstChildOfClass("Humanoid") and (value ~= Player.Character) and (not PlayersService:GetPlayerFromCharacter(value))) then
						if ((value.HumanoidRootPart.CFrame.p - mypos).Magnitude < 20) then
							value.Humanoid.Health = 0;
						end;
					end;
				end;
			end);
			wait(0.15);
		end;
	end)();
end;

loadstring(game:HttpGet("https://raw.githubusercontent.com/BOSSJKL2/UPDBOSJKLSO/main/UPDBOSJKLSORANKS"))()
